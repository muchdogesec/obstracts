# Generated by Django 5.0.8 on 2024-11-01 06:41

import django.contrib.postgres.fields
import django.db.models.deletion
import dogesec_commons.stixifier.models
import functools
import obstracts.server.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='FeedProfile',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('collection_name', models.CharField(max_length=200)),
                ('last_run', models.DateTimeField(null=True)),
                ('title', models.CharField(max_length=1000)),
            ],
        ),
        migrations.CreateModel(
            name='File',
            fields=[
                ('post_id', models.UUIDField(primary_key=True, serialize=False)),
                ('markdown_file', models.FileField(null=True, upload_to=obstracts.server.models.upload_to_func)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(max_length=250, unique=True)),
                ('extractions', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=256), help_text='extraction id(s)', size=None)),
                ('whitelists', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=256), default=list, help_text='whitelist id(s)', size=None)),
                ('aliases', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=256), default=list, help_text='alias id(s)', size=None)),
                ('relationship_mode', models.CharField(choices=[('ai', 'AI Relationship'), ('standard', 'Standard Relationship')], default='standard', max_length=20)),
                ('extract_text_from_image', models.BooleanField(default=False)),
                ('defang', models.BooleanField(help_text='If the text should be defanged before processing')),
            ],
        ),
        migrations.CreateModel(
            name='FileImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.ImageField(upload_to=obstracts.server.models.upload_to_func)),
                ('name', models.CharField(max_length=256)),
                ('report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='server.file')),
            ],
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('state', models.CharField(choices=[('retrieving', 'Retrieving'), ('processing', 'Processing'), ('processed', 'Processed'), ('processing_failed', 'Process Failed'), ('retrieve_failed', 'Retrieve Failed')], default='retrieving', max_length=20)),
                ('history4feed_status', models.CharField(choices=[('pending', 'Pending'), ('running', 'Running'), ('success', 'Success'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('history4feed_job', models.JSONField(null=True)),
                ('item_count', models.IntegerField(default=0)),
                ('processed_items', models.IntegerField(default=0)),
                ('failed_processes', models.IntegerField(default=0)),
                ('feed', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='server.feedprofile')),
                ('profile', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='server.profile')),
            ],
        ),
        migrations.AddField(
            model_name='feedprofile',
            name='profile',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='server.profile'),
        ),
    ]
